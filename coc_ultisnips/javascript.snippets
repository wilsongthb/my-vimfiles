# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet mkg "Make http getter" b
static async get$1(params) {
  return (await http.get("api/$2", { params })).data;
}
endsnippet

snippet  mkrs "Make function resources" b
static async get$1s(params) {
  return (await http.get("api/$2", { params })).data;
}

static async get$1(id) {
  return (await http.get(\`api/$2/\${id}\`)).data;
}

static async save$1(reg) {
  if(reg.id === undefined) {
    return (await http.post("api/$2", reg)).data;
  } else {
    return (await http.put(\`api/$2/\${reg.id}\`, reg)).data;
  }
}

static async delete$1(id) {
  return (await http.delete(\`api/$2/\${id}\`)).data;
}

endsnippet


